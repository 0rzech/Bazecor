name: Staging

on:
  push:
    branches:
      - downstream
      - downstream-test

permissions:
  contents: read

jobs:
  testing:
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-20.04
    steps:
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18.16.0
      - run: npm install -g yarn
      - if: runner.os == 'Linux'
        run: sudo apt update && sudo apt install libudev-dev
      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('package.json', 'yarn.lock') }}
      - name: Install node_modules
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile --network-timeout 300000 # sometimes yarn takes time, therefore, we increase the timeout
      - run: yarn run test

  build:
    runs-on: ${{ matrix.os }}
    needs: [testing]
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-20.04

    steps:
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18.16.0
      - run: npm install -g yarn
      - if: runner.os == 'Linux'
        run: sudo apt update && sudo apt install libudev-dev
      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('package.json', 'yarn.lock') }}
      - name: Install node_modules
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile --network-timeout 300000 # sometimes yarn takes time, therefore, we increase the timeout
      - if: runner.os != 'macOS'
        name: Build for Linux/Windows
        run: yarn run make-lin
      - name: Upload build
        uses: actions/upload-artifact@v4
        with:
          name: artifacts
          path: |
            out/make/**/*.AppImage
          retention-days: 7
          compression-level: 0

      - name: Show build items
        run: |
          find out/make -type f -exec sha256sum -b {} \; | sed 's|\*.*/|*|g'
